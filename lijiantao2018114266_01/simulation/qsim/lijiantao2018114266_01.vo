// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition"

// DATE "07/08/2020 20:59:28"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module lijiantao2018114266_01 (
	CLK,
	Y_500HZ);
input 	CLK;
output 	Y_500HZ;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Y_500HZ~output_o ;
wire \CLK~input_o ;
wire \Add0~53_sumout ;
wire \Add0~2 ;
wire \Add0~41_sumout ;
wire \Add0~42 ;
wire \Add0~37_sumout ;
wire \Add0~38 ;
wire \Add0~33_sumout ;
wire \Add0~34 ;
wire \Add0~29_sumout ;
wire \Add0~30 ;
wire \Add0~25_sumout ;
wire \Add0~26 ;
wire \Add0~57_sumout ;
wire \Add0~58 ;
wire \Add0~61_sumout ;
wire \Add0~62 ;
wire \Add0~5_sumout ;
wire \Add0~6 ;
wire \Add0~9_sumout ;
wire \Add0~10 ;
wire \Add0~13_sumout ;
wire \Add0~14 ;
wire \Add0~17_sumout ;
wire \Add0~18 ;
wire \Add0~21_sumout ;
wire \Equal0~0_combout ;
wire \Equal0~1_combout ;
wire \Equal0~2_combout ;
wire \Equal0~3_combout ;
wire \Add0~54 ;
wire \Add0~49_sumout ;
wire \Add0~50 ;
wire \Add0~45_sumout ;
wire \Add0~46 ;
wire \Add0~1_sumout ;
wire \TMP~0_combout ;
wire \TMP~q ;
wire [15:0] CNT;


cyclonev_io_obuf \Y_500HZ~output (
	.i(\TMP~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y_500HZ~output_o ),
	.obar());
// synopsys translate_off
defparam \Y_500HZ~output .bus_hold = "false";
defparam \Y_500HZ~output .open_drain_output = "false";
defparam \Y_500HZ~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \CLK~input (
	.i(CLK),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\CLK~input_o ));
// synopsys translate_off
defparam \CLK~input .bus_hold = "false";
defparam \CLK~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Add0~53 (
// Equation(s):
// \Add0~53_sumout  = SUM(( CNT[0] ) + ( VCC ) + ( !VCC ))
// \Add0~54  = CARRY(( CNT[0] ) + ( VCC ) + ( !VCC ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[0]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~53_sumout ),
	.cout(\Add0~54 ),
	.shareout());
// synopsys translate_off
defparam \Add0~53 .extended_lut = "off";
defparam \Add0~53 .lut_mask = 64'h00000000000000FF;
defparam \Add0~53 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Add0~1 (
// Equation(s):
// \Add0~1_sumout  = SUM(( CNT[3] ) + ( GND ) + ( \Add0~46  ))
// \Add0~2  = CARRY(( CNT[3] ) + ( GND ) + ( \Add0~46  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[3]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~46 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~1_sumout ),
	.cout(\Add0~2 ),
	.shareout());
// synopsys translate_off
defparam \Add0~1 .extended_lut = "off";
defparam \Add0~1 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Add0~41 (
// Equation(s):
// \Add0~41_sumout  = SUM(( CNT[4] ) + ( GND ) + ( \Add0~2  ))
// \Add0~42  = CARRY(( CNT[4] ) + ( GND ) + ( \Add0~2  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[4]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~2 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~41_sumout ),
	.cout(\Add0~42 ),
	.shareout());
// synopsys translate_off
defparam \Add0~41 .extended_lut = "off";
defparam \Add0~41 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~41 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[4] (
	.clk(\CLK~input_o ),
	.d(\Add0~41_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[4]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[4] .is_wysiwyg = "true";
defparam \CNT[4] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~37 (
// Equation(s):
// \Add0~37_sumout  = SUM(( CNT[5] ) + ( GND ) + ( \Add0~42  ))
// \Add0~38  = CARRY(( CNT[5] ) + ( GND ) + ( \Add0~42  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[5]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~42 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~37_sumout ),
	.cout(\Add0~38 ),
	.shareout());
// synopsys translate_off
defparam \Add0~37 .extended_lut = "off";
defparam \Add0~37 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~37 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[5] (
	.clk(\CLK~input_o ),
	.d(\Add0~37_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[5]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[5] .is_wysiwyg = "true";
defparam \CNT[5] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~33 (
// Equation(s):
// \Add0~33_sumout  = SUM(( CNT[6] ) + ( GND ) + ( \Add0~38  ))
// \Add0~34  = CARRY(( CNT[6] ) + ( GND ) + ( \Add0~38  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[6]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~38 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~33_sumout ),
	.cout(\Add0~34 ),
	.shareout());
// synopsys translate_off
defparam \Add0~33 .extended_lut = "off";
defparam \Add0~33 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~33 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[6] (
	.clk(\CLK~input_o ),
	.d(\Add0~33_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[6]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[6] .is_wysiwyg = "true";
defparam \CNT[6] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~29 (
// Equation(s):
// \Add0~29_sumout  = SUM(( CNT[7] ) + ( GND ) + ( \Add0~34  ))
// \Add0~30  = CARRY(( CNT[7] ) + ( GND ) + ( \Add0~34  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[7]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~34 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~29_sumout ),
	.cout(\Add0~30 ),
	.shareout());
// synopsys translate_off
defparam \Add0~29 .extended_lut = "off";
defparam \Add0~29 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~29 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[7] (
	.clk(\CLK~input_o ),
	.d(\Add0~29_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[7]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[7] .is_wysiwyg = "true";
defparam \CNT[7] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~25 (
// Equation(s):
// \Add0~25_sumout  = SUM(( CNT[8] ) + ( GND ) + ( \Add0~30  ))
// \Add0~26  = CARRY(( CNT[8] ) + ( GND ) + ( \Add0~30  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[8]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~30 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~25_sumout ),
	.cout(\Add0~26 ),
	.shareout());
// synopsys translate_off
defparam \Add0~25 .extended_lut = "off";
defparam \Add0~25 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~25 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[8] (
	.clk(\CLK~input_o ),
	.d(\Add0~25_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[8]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[8] .is_wysiwyg = "true";
defparam \CNT[8] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~57 (
// Equation(s):
// \Add0~57_sumout  = SUM(( CNT[9] ) + ( GND ) + ( \Add0~26  ))
// \Add0~58  = CARRY(( CNT[9] ) + ( GND ) + ( \Add0~26  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[9]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~26 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~57_sumout ),
	.cout(\Add0~58 ),
	.shareout());
// synopsys translate_off
defparam \Add0~57 .extended_lut = "off";
defparam \Add0~57 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~57 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[9] (
	.clk(\CLK~input_o ),
	.d(\Add0~57_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[9]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[9] .is_wysiwyg = "true";
defparam \CNT[9] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~61 (
// Equation(s):
// \Add0~61_sumout  = SUM(( CNT[10] ) + ( GND ) + ( \Add0~58  ))
// \Add0~62  = CARRY(( CNT[10] ) + ( GND ) + ( \Add0~58  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[10]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~58 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~61_sumout ),
	.cout(\Add0~62 ),
	.shareout());
// synopsys translate_off
defparam \Add0~61 .extended_lut = "off";
defparam \Add0~61 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~61 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[10] (
	.clk(\CLK~input_o ),
	.d(\Add0~61_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[10]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[10] .is_wysiwyg = "true";
defparam \CNT[10] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~5 (
// Equation(s):
// \Add0~5_sumout  = SUM(( CNT[11] ) + ( GND ) + ( \Add0~62  ))
// \Add0~6  = CARRY(( CNT[11] ) + ( GND ) + ( \Add0~62  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[11]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~62 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~5_sumout ),
	.cout(\Add0~6 ),
	.shareout());
// synopsys translate_off
defparam \Add0~5 .extended_lut = "off";
defparam \Add0~5 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~5 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[11] (
	.clk(\CLK~input_o ),
	.d(\Add0~5_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[11]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[11] .is_wysiwyg = "true";
defparam \CNT[11] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~9 (
// Equation(s):
// \Add0~9_sumout  = SUM(( CNT[12] ) + ( GND ) + ( \Add0~6  ))
// \Add0~10  = CARRY(( CNT[12] ) + ( GND ) + ( \Add0~6  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[12]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~6 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~9_sumout ),
	.cout(\Add0~10 ),
	.shareout());
// synopsys translate_off
defparam \Add0~9 .extended_lut = "off";
defparam \Add0~9 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~9 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[12] (
	.clk(\CLK~input_o ),
	.d(\Add0~9_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[12]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[12] .is_wysiwyg = "true";
defparam \CNT[12] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~13 (
// Equation(s):
// \Add0~13_sumout  = SUM(( CNT[13] ) + ( GND ) + ( \Add0~10  ))
// \Add0~14  = CARRY(( CNT[13] ) + ( GND ) + ( \Add0~10  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[13]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~10 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~13_sumout ),
	.cout(\Add0~14 ),
	.shareout());
// synopsys translate_off
defparam \Add0~13 .extended_lut = "off";
defparam \Add0~13 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~13 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[13] (
	.clk(\CLK~input_o ),
	.d(\Add0~13_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[13]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[13] .is_wysiwyg = "true";
defparam \CNT[13] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~17 (
// Equation(s):
// \Add0~17_sumout  = SUM(( CNT[14] ) + ( GND ) + ( \Add0~14  ))
// \Add0~18  = CARRY(( CNT[14] ) + ( GND ) + ( \Add0~14  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[14]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~14 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~17_sumout ),
	.cout(\Add0~18 ),
	.shareout());
// synopsys translate_off
defparam \Add0~17 .extended_lut = "off";
defparam \Add0~17 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~17 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[14] (
	.clk(\CLK~input_o ),
	.d(\Add0~17_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[14]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[14] .is_wysiwyg = "true";
defparam \CNT[14] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~21 (
// Equation(s):
// \Add0~21_sumout  = SUM(( CNT[15] ) + ( GND ) + ( \Add0~18  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[15]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~18 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~21_sumout ),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Add0~21 .extended_lut = "off";
defparam \Add0~21 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~21 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[15] (
	.clk(\CLK~input_o ),
	.d(\Add0~21_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[15]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[15] .is_wysiwyg = "true";
defparam \CNT[15] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (!CNT[12] & (!CNT[13] & (CNT[14] & CNT[15])))

	.dataa(!CNT[12]),
	.datab(!CNT[13]),
	.datac(!CNT[14]),
	.datad(!CNT[15]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~0 .extended_lut = "off";
defparam \Equal0~0 .lut_mask = 64'h0008000800080008;
defparam \Equal0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Equal0~1 (
// Equation(s):
// \Equal0~1_combout  = ( !CNT[4] & ( (CNT[8] & (!CNT[7] & (CNT[6] & !CNT[5]))) ) )

	.dataa(!CNT[8]),
	.datab(!CNT[7]),
	.datac(!CNT[6]),
	.datad(!CNT[5]),
	.datae(!CNT[4]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~1 .extended_lut = "off";
defparam \Equal0~1 .lut_mask = 64'h0400000004000000;
defparam \Equal0~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Equal0~2 (
// Equation(s):
// \Equal0~2_combout  = ( !CNT[10] & ( (CNT[2] & (CNT[1] & (CNT[0] & CNT[9]))) ) )

	.dataa(!CNT[2]),
	.datab(!CNT[1]),
	.datac(!CNT[0]),
	.datad(!CNT[9]),
	.datae(!CNT[10]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~2 .extended_lut = "off";
defparam \Equal0~2 .lut_mask = 64'h0001000000010000;
defparam \Equal0~2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Equal0~3 (
// Equation(s):
// \Equal0~3_combout  = ( \Equal0~2_combout  & ( (CNT[3] & (!CNT[11] & (\Equal0~0_combout  & \Equal0~1_combout ))) ) )

	.dataa(!CNT[3]),
	.datab(!CNT[11]),
	.datac(!\Equal0~0_combout ),
	.datad(!\Equal0~1_combout ),
	.datae(!\Equal0~2_combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~3 .extended_lut = "off";
defparam \Equal0~3 .lut_mask = 64'h0000000400000004;
defparam \Equal0~3 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[0] (
	.clk(\CLK~input_o ),
	.d(\Add0~53_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[0]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[0] .is_wysiwyg = "true";
defparam \CNT[0] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~49 (
// Equation(s):
// \Add0~49_sumout  = SUM(( CNT[1] ) + ( GND ) + ( \Add0~54  ))
// \Add0~50  = CARRY(( CNT[1] ) + ( GND ) + ( \Add0~54  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[1]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~54 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~49_sumout ),
	.cout(\Add0~50 ),
	.shareout());
// synopsys translate_off
defparam \Add0~49 .extended_lut = "off";
defparam \Add0~49 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~49 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[1] (
	.clk(\CLK~input_o ),
	.d(\Add0~49_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[1]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[1] .is_wysiwyg = "true";
defparam \CNT[1] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~45 (
// Equation(s):
// \Add0~45_sumout  = SUM(( CNT[2] ) + ( GND ) + ( \Add0~50  ))
// \Add0~46  = CARRY(( CNT[2] ) + ( GND ) + ( \Add0~50  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!CNT[2]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~50 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~45_sumout ),
	.cout(\Add0~46 ),
	.shareout());
// synopsys translate_off
defparam \Add0~45 .extended_lut = "off";
defparam \Add0~45 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~45 .shared_arith = "off";
// synopsys translate_on

dffeas \CNT[2] (
	.clk(\CLK~input_o ),
	.d(\Add0~45_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[2]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[2] .is_wysiwyg = "true";
defparam \CNT[2] .power_up = "low";
// synopsys translate_on

dffeas \CNT[3] (
	.clk(\CLK~input_o ),
	.d(\Add0~1_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(CNT[3]),
	.prn(vcc));
// synopsys translate_off
defparam \CNT[3] .is_wysiwyg = "true";
defparam \CNT[3] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \TMP~0 (
// Equation(s):
// \TMP~0_combout  = ( \Equal0~1_combout  & ( \Equal0~2_combout  & ( !\TMP~q  $ (((!CNT[3]) # ((!\Equal0~0_combout ) # (CNT[11])))) ) ) ) # ( !\Equal0~1_combout  & ( \Equal0~2_combout  & ( \TMP~q  ) ) ) # ( \Equal0~1_combout  & ( !\Equal0~2_combout  & ( 
// \TMP~q  ) ) ) # ( !\Equal0~1_combout  & ( !\Equal0~2_combout  & ( \TMP~q  ) ) )

	.dataa(!\TMP~q ),
	.datab(!CNT[3]),
	.datac(!CNT[11]),
	.datad(!\Equal0~0_combout ),
	.datae(!\Equal0~1_combout ),
	.dataf(!\Equal0~2_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\TMP~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \TMP~0 .extended_lut = "off";
defparam \TMP~0 .lut_mask = 64'h5555555555555565;
defparam \TMP~0 .shared_arith = "off";
// synopsys translate_on

dffeas TMP(
	.clk(\CLK~input_o ),
	.d(\TMP~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\TMP~q ),
	.prn(vcc));
// synopsys translate_off
defparam TMP.is_wysiwyg = "true";
defparam TMP.power_up = "low";
// synopsys translate_on

assign Y_500HZ = \Y_500HZ~output_o ;

endmodule
